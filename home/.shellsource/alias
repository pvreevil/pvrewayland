alias neofetch='clear ; neofetch --backend off'
alias ls='ls -A --color=auto -cltp --si --group-directories-first'
alias poff='loginctl poweroff'
alias reboot='loginctl reboot'
alias zzz='loginctl suspend'
alias emergequery='emerge --resume -pv'
alias backuproot='doas btrfs subvolume snapshot /btrfstoplvl/@gentoo /.snap/root/@$(date +"%Y-%m-%d_%H:%M:%S")'
alias backuphome='doas btrfs subvolume snapshot /btrfstoplvl/@home /.snap/home/@$(date +"%Y-%m-%d_%H:%M:%S")'
alias nethogs='doas nethogs'

#needs plugdev group
alias dmount='udevil mount '
alias dumount='udevil umount'

alias mount='doas mount'
alias umount='doas umount'

alias newsboat='newsboat ; $BARPATH/newsboat/nb.sh '
alias google='surfraw google'
alias gutenberg='surfraw gutenberg'

alias bprogr='bmenu -c $HOME/.config/bmenu/plist'
alias bpmenu='bmenu -c $HOME/.config/bmenu/power'

alias hblock='doas hblock -S $HOME/.config/hblock/sources'

alias otcry='doas cryptsetup tcryptOpen'
alias ctcry='doas cryptsetup tcryptClose'
alias oluks='doas cryptsetup luksOpen'
alias cluks='doas cryptsetup luksClose'
alias nluks='doas cryptsetup --type luks -c serpent-xts-plain64 -s 512 --hash whirlpool luksFormat'
alias listmerge='emerge -rpv'
alias ts='echo $(date)>timestamp_"$(date +%m_%d)"'
alias mountftp='curlftpfs ftp://192.168.0.100:2211 $HOME/ftp/'
alias sharehdd1='uftpd -l debug -n -o tftp=0,ftp=2121,writable /mnt/hdd1/'

#alias sway='mkdir /tmp/ghud ; GALLIUM_HUD="cpu,cpu0,cpu1,cpu2,cpu3,cpu4,cpu5,cpu6,cpu7,VRAM-usage,temperature,fps,GPU-load" GALLIUM_HUD_PERIOD=0.1 GALLIUM_HUD_DUMP_DIR="/tmp/ghud" GALLIUM_HUD_VISIBLE="false" dbus-run-session sway'

alias sway='mkdir /tmp/ghud ; GALLIUM_HUD="cpu,GPU-load" GALLIUM_HUD_PERIOD=0.1 GALLIUM_HUD_DUMP_DIR="/tmp/ghud" GALLIUM_HUD_VISIBLE="false" dbus-run-session sway'


fopen(){
	linopen $(find|fzy)
}

worldupdate(){

pkill swayidle

doas emerge -j 4 -auvND @world

notify-send.sh -t 7000 "@world" "Finished"

swayidle -w timeout 600 sglitchlock timeout 720 'loginctl suspend' before-sleep 'sglitchlock' &>/dev/null &

}


liveupdate(){

pkill swayidle

doas emerge -avD @live-rebuild

notify-send.sh -t 7000 "@live-rebuild" "Finished"

swayidle -w timeout 600 sglitchlock timeout 720 'loginctl suspend' before-sleep 'sglitchlock' &>/dev/null &

}


sync(){

pkill swayidle

doas emerge --sync

swayidle -w timeout 600 sglitchlock timeout 720 'loginctl suspend' before-sleep 'sglitchlock' &>/dev/null &

}


totp(){

oathtool --base32 --totp "$1"

}


#https://github.com/paulmillr/dotfiles/blob/master/home/.zshrc.sh#L282

ram(){
	local sum
	local items
	local app="$1"
	if [ -z "$app" ]; then
		echo "First argument - pattern to grep from processes"
	else
	sum=0
	for i in `ps aux | grep -i "$app" | grep -v "grep" | awk '{print $6}'`; do
		sum=$(($i + $sum))
	done
	sum=$(echo "scale=2; $sum / 1024.0" | bc)
		if [[ $sum != "0" ]]; then
		echo "${fg[blue]}${app}${reset_color} uses ${fg[green]}${sum}${reset_color} MBs of RAM."
	else
		echo "There are no processes with pattern '${fg[blue]}${app}${reset_color}' are running."
		fi
	fi
}
					      
swall(){

swaymsg "output * bg '$(readlink -f .)/"$1"' fill #000000"

}
